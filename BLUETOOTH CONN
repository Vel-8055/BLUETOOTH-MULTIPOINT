#include <Arduino.h>
#include "BluetoothA2DPSink.h"
#include "driver/i2s.h"

#define I2S_NUM I2S_NUM_0
#define I2S_BCK  26
#define I2S_WS   25
#define I2S_DIN  22

BluetoothA2DPSink a2dp_sink;
const char* device_name = "ESP32_A2DP";

void setupI2S() {
    i2s_config_t i2s_config = {
        .mode = (i2s_mode_t)(I2S_MODE_MASTER | I2S_MODE_RX),
        .sample_rate = 44100,
        .bits_per_sample = I2S_BITS_PER_SAMPLE_16BIT,
        .channel_format = I2S_CHANNEL_FMT_RIGHT_LEFT,
        .communication_format = I2S_COMM_FORMAT_I2S,
        .dma_buf_count = 8,
        .dma_buf_len = 512,
        .intr_alloc_flags = 0,
        .tx_desc_auto_clear = true,
        .use_apll = true
    };

    i2s_pin_config_t pin_config = {
        .bck_io_num = I2S_BCK,
        .ws_io_num = I2S_WS,
        .data_out_num = -1, // Not using output
        .data_in_num = I2S_DIN
    };

    i2s_driver_install(I2S_NUM, &i2s_config, 0, NULL);
    i2s_set_pin(I2S_NUM, &pin_config);
}

void setup() {
    Serial.begin(115200);
    
    // Initialize I2S to receive SBC data from STM32
    setupI2S();
    
    // Initialize Bluetooth A2DP
    a2dp_sink.start(device_name);
}

void loop() {
    uint8_t sbc_data[512];
    size_t bytes_read;

    // Read SBC data from I2S
    i2s_read(I2S_NUM, sbc_data, sizeof(sbc_data), &bytes_read, portMAX_DELAY);
    
    if (bytes_read > 0) {
        // Send received SBC data to A2DP
        a2dp_sink.write_sbc(sbc_data, bytes_read);
    }
}
